,,, Retrieving results ,,,
$users = $db->table('users')->get();
foreach($users as $user) {
  echo $user->name;
}

$users = $db->table('users')->all();
foreach($users as $user) {
  echo $user->name;
}

,,, Retrieving a single ,,,
$user = $db->table('users')
->where('id', 1)
->get();
echo $user->name;

$user = $db->table('users')
->where('id', 1)
->select('name, surname')
->get();
echo $user->name.' '.$user->surname;

,,, Forcing array ,,,
$user = $db->table('users')
->where('id', 1)
->all();
foreach($users as $user) {
  echo $user->name;
}

$user = $db->table('users')
->where('id', '>', 1)
->all();
foreach($users as $user) {
  echo $user->name;
}

,,, Aggregates ,,,
$avg = $db->table('orders')->avg('price');
echo $avg;

$sum = $db->table('orders')->sum('price');
echo $sum;

$min = $db->table('orders')->min('price');
echo $min;

$max = $db->table('orders')->max('price');
echo $max;

$count = $db->table('orders')->count();
echo $count;

,,, Where conditions ,,,
$users = $db->table('users')
->where('id', '>', 1)
->get();

$user = $db->table('users')
->where('id', 1)
->get();

$user = $db->table('users')
->where('country', 'Italy')
->and('name', 'LIKE', '%David%')
->get();

,,, OR condition ,,,
$user = $db->table('users')
->where('country', 'Italy')
->or('country', 'Spain')
->get();

,,, AND/OR closure ,,,
$user = $db->table('users')
->where('country', 'Italy')
->and(function($query) {
  $query->where('country', 'Spain')
  ->or('country', 'France')
})->get();

,,, BETWEEN condition ,,,
$user = $db->table('users')
->whereBetween('age', [20, 30])
->get();

$user = $db->table('users')
->whereNotBetween('age', [20, 30])
->get();

,,, IN condition ,,,
$user = $db->table('users')
->whereIn('age', [20, 30])
->get();

$user = $db->table('users')
->whereNotIn('age', [20, 30])
->get();

,,, IS NULL condition ,,,
$user = $db->table('users')
->whereNull('updated_at')
->get();

$user = $db->table('users')
->whereNotNull('updated_at')
->get()

,,, Raw Where ,,,
$users = $db->table('users')
->rawWhere('WHERE age = :age AND role = :role', [
  'age' => 20,
  'role' => 1
])->get();

,,, Joins ,,,
$users = $db->table('users')
->leftJoin('roles ON roles.id = users.role_id')
->select('users.*', 'roles.name')
->get();

,,, Insert ,,,
$lastInsertedId = $db->table('users')
->insert([
  'name' => 'Name', 
  'surname' => 'Surname'
])->lastId();

,,, Update ,,,
$update = $db->table('users')
->where('id', 1)
->update([
  'name' => 'Name', 
  'surname' => 'Surname'
])->exec();

,,, Delete ,,,
$delete = $db->table('users')
->where('id', 1)
->delete()
->exec();

,,, Truncate ,,,
$users = $db->table('users)
->truncate()
->exec();

,,, Ordering, grouping, limit and offset ,,,
$users = $db->table('users')
->groupBy('role')
->get();

$users = $db->table('users')
->orderBy('id DESC')
->get();

$users = $db->table('users')
->limit('0, 10')
->get();

$users = $db->table('users')
->limit('10')
->offset(5)
->get();

,,, Raw query ,,,
$users = $db->query("
  SELECT users.*, roles.name
  FROM users
  LEFT JOIN roles ON roles.id = users.role_id
  WHERE users.city = :city
  ORDER BY users.id DESC
")->values([
  'city' => 'Naples'
])->get();

,,, Debugging ,,,
$fruits = $db->table('fruit')
->where('calories', '<', 30)
->and('colour', 'red')
->select('name', 'colour', 'calories')
->debug()